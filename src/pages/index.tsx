import { SignIn, SignInButton, SignOutButton } from "@clerk/clerk-react";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import { useUser } from "@clerk/nextjs";

import { RouterOutputs, api } from "~/utils/api";

import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";

dayjs.extend(relativeTime);

const CreatePostWizard = () => {
  const { user } = useUser();

  if (!user) return null;

  return (
    <div className="flex gap-3 w-full">
      <Image
        src={user.imageUrl}
        className="w-14 h-14 rounded-full"
        alt="Profile image"
        width={56}
        height={56}
      />

      <input type="text" placeholder="Type some emoiji!" className="bg-transparent grow outline-none" />
    </div>
  );
};

type PostWithUser = RouterOutputs["posts"]["getAll"][number];
const PostView = (props: PostWithUser) => {
  const { post, author } = props;
  return (
    <div key={post.id} className="p8 border-b border-slate-400 flex gap-3">
      <Image width={56} height={56} src={author.imageUrl} className="w-14 h-14 rounded-full" alt={`@${author.username}`} />
      <div className="flex flex-col">
        <div className="flex gap-1 text-slate-400">
          <span className="font-thin">{`@${author.username}`}</span><span>{`Â· ${dayjs(post.createdAt).fromNow()}`}</span>
        </div>
        <span>{post.content}</span>
      </div>
    </div>
  )
}

export default function Home(props) {
  const user = useUser();

  const { data, isLoading } = api.posts.getAll.useQuery();

  if (!data || isLoading) return <div>Loading...</div>;

  return (
    <>
      <Head>
        <title>Chirp</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex justify-center h-screen">
        <div className="w-full md:max-w-2xl border-x border-slate-200 h-full">

          <div className="flex border-b border-slate-200 px-4 py-4">
            {user.isSignedIn && <CreatePostWizard />}

            {!user.isSignedIn && (
              <div className="flex justify-center">
                <SignInButton />
              </div>
            )}

            {!!user.isSignedIn && (
              <div className="flex justify-center">
                <SignOutButton />
              </div>
            )}


          </div>

          <div className="flex flex-col">
            {data?.map((fullPost) => (
              <PostView {...fullPost} key={fullPost.post.id} />
            ))}
          </div>

        </div>



        <div>

        </div>
      </main>
    </>
  );
}
